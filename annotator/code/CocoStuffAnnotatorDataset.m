classdef CocoStuffAnnotatorDataset
    % CocoStuffAnnotatorDataset
    %
    % Semantic segmentation dataset for stuff classes in COCO
    %
    % Copyright by Holger Caesar, 2016
    
    % Properties that are normally in the Dataset class
    properties
        % General settings
        name
        
        % Image settings
        imageExt = '.jpg';
        imageFolder = 'Images';
    end
    
    methods
        function[obj] = CocoStuffAnnotatorDataset()
            % Define dataset
            obj.name = 'CocoStuff';
            obj.imageExt = '.jpg';
        end
        
        function[image] = getImage(obj, imageName, ~)
            % [image] = getImage(obj, imageName, ~)
            
            % Create path
            imageFolderFull = fullfile(cocoStuff_root(), 'annotator', 'data', 'input', 'images');
            imagePath = fullfile(imageFolderFull, [imageName, obj.imageExt]);
            
            % Read in image and convert to double
            image = im2double(imread(imagePath));
            
            % Convert grayscale to rgb
            if size(image, 3) == 1
                image = cat(3, image, image, image);
            end
        end
        
        function[nodes, categories, heights, parents] = getClassHierarchy(obj)
            % Gets a hierarchies of all labels in CocoStuff (things+stuff)
            [~, ~, ~, parentsStuff] = obj.getClassHierarchyStuff();
            [~, ~, ~, parentsThings] = obj.getClassHierarchyThings();
            
            % Combine both subtrees
            parentsStuff{1, 2} = 'root';
            parentsThings{1, 2} = 'root';
            parents = [{'root'}, {'root'}; ...
                parentsThings; parentsStuff];
            
            % Convert to tree
            [nodes, categories, heights] = parentsToTrees(parents);
        end
        
        function[nodes, categories, heights, parents] = getClassHierarchyThings(~)
            % Returns a hierarchy of classes to be plotted with treeplot(nodes)
            
            parents = { ...
                'things', 'things'; ...
                ... % End of level 1
                'indoor-things', 'things'; ...
                'outdoor-things', 'things'; ...
                ... % End of level 2
                'person&accessory', 'outdoor-things'; ...
                'animal', 'outdoor-things'; ...
                'vehicle', 'outdoor-things'; ...
                'outdoor objects', 'outdoor-things'; ...
                'sports', 'outdoor-things'; ...
                'kitchenware', 'indoor-things'; ...
                'food-things', 'indoor-things'; ...
                'furniture-things', 'indoor-things'; ...
                'appliance', 'indoor-things'; ...
                'electronics', 'indoor-things'; ...
                'indoor objects', 'indoor-things'; ...
                ... % End of level 3
                'person', 'person&accessory'; ...
                'backpack', 'person&accessory'; ...
                'umbrella', 'person&accessory'; ...
                'handbag', 'person&accessory'; ...
                'tie', 'person&accessory'; ...
                'suitcase', 'person&accessory'; ...
                'bicycle', 'vehicle'; ...
                'car', 'vehicle'; ...
                'motorcycle', 'vehicle'; ...
                'airplane', 'vehicle'; ...
                'bus', 'vehicle'; ...
                'train', 'vehicle'; ...
                'truck', 'vehicle'; ...
                'boat', 'vehicle'; ...
                'traffic light', 'outdoor objects'; ...
                'fire hydrant', 'outdoor objects'; ...
                'stop sign', 'outdoor objects'; ...
                'parking meter', 'outdoor objects'; ...
                'bench', 'outdoor objects'; ...
                'bird', 'animal'; ...
                'cat', 'animal'; ...
                'dog', 'animal'; ...
                'horse', 'animal'; ...
                'sheep', 'animal'; ...
                'cow', 'animal'; ...
                'elephant', 'animal'; ...
                'bear', 'animal'; ...
                'zebra', 'animal'; ...
                'giraffe', 'animal'; ...
                'frisbee', 'sports'; ...
                'skis', 'sports'; ...
                'snowboard', 'sports'; ...
                'sports ball', 'sports'; ...
                'kite', 'sports'; ...
                'baseball bat', 'sports'; ...
                'baseball glove', 'sports'; ...
                'skateboard', 'sports'; ...
                'surfboard', 'sports'; ...
                'tennis racket', 'sports'; ...
                'bottle', 'kitchenware'; ...
                'wine glass', 'kitchenware'; ...
                'cup', 'kitchenware'; ...
                'fork', 'kitchenware'; ...
                'knife', 'kitchenware'; ...
                'spoon', 'kitchenware'; ...
                'bowl', 'kitchenware'; ...
                'banana', 'food-things'; ...
                'apple', 'food-things'; ...
                'sandwich', 'food-things'; ...
                'orange', 'food-things'; ...
                'broccoli', 'food-things'; ...
                'carrot', 'food-things'; ...
                'hot dog', 'food-things'; ...
                'pizza', 'food-things'; ...
                'donut', 'food-things'; ...
                'cake', 'food-things'; ...
                'chair', 'furniture-things'; ...
                'couch', 'furniture-things'; ...
                'potted plant', 'furniture-things'; ...
                'bed', 'furniture-things'; ...
                'dining table', 'furniture-things'; ...
                'toilet', 'furniture-things'; ...
                'tv', 'electronics'; ...
                'laptop', 'electronics'; ...
                'mouse', 'electronics'; ...
                'remote', 'electronics'; ...
                'keyboard', 'electronics'; ...
                'cell phone', 'electronics'; ...
                'microwave', 'appliance'; ...
                'oven', 'appliance'; ...
                'toaster', 'appliance'; ...
                'sink', 'appliance'; ...
                'refrigerator', 'appliance'; ...
                'hair drier', 'indoor objects'; ...
                'book', 'indoor objects'; ...
                'clock', 'indoor objects'; ...
                'vase', 'indoor objects'; ...
                'scissors', 'indoor objects'; ...
                'teddy bear', 'indoor objects'; ...
                'toothbrush', 'indoor objects'; ...
                };
            
            % Convert to tree
            [nodes, categories, heights] = parentsToTrees(parents);
        end
        
        function[nodes, categories, heights, parents] = getClassHierarchyStuff(~)
            % Returns a hierarchy of stuff classes to be plotted with treeplot(nodes)
            
            parents = { ...
                'stuff', 'stuff'; ...
                ... % End of level 1
                'indoor-stuff', 'stuff'; ...
                'outdoor-stuff', 'stuff'; ...
                ... % End of level 2
                'raw-material', 'indoor-stuff'; ...
                'wall', 'indoor-stuff'; ...
                'ceiling', 'indoor-stuff'; ...
                'floor', 'indoor-stuff'; ...
                'window', 'indoor-stuff'; ...
                'furniture-stuff', 'indoor-stuff'; ...
                'textile', 'indoor-stuff'; ...
                'food-stuff', 'indoor-stuff'; ...
                'building', 'outdoor-stuff'; ...
                'structural', 'outdoor-stuff'; ...
                'plant', 'outdoor-stuff'; ...
                'sky', 'outdoor-stuff'; ...
                'solid', 'outdoor-stuff'; ...
                'ground', 'outdoor-stuff'; ...
                'water', 'outdoor-stuff'; ...
                ... % End of level 3
                'cardboard', 'raw-material'; ...
                'paper', 'raw-material'; ...
                'plastic', 'raw-material'; ...
                'metal', 'raw-material'; ...
                'wall-tile', 'wall'; ...
                'wall-panel', 'wall'; ...
                'wall-wood', 'wall'; ...
                'wall-brick', 'wall'; ...
                'wall-stone', 'wall'; ...
                'wall-concrete', 'wall'; ...
                'wall-other', 'wall'; ...
                'ceiling-tile', 'ceiling'; ...
                'ceiling-other', 'ceiling'; ...
                'carpet', 'floor'; ...
                'floor-tile', 'floor'; ...
                'floor-wood', 'floor'; ...
                'floor-marble', 'floor'; ...
                'floor-stone', 'floor'; ...
                'floor-other', 'floor'; ...
                'window-blind', 'window'; ...
                'window-other', 'window'; ...
                'door', 'furniture-stuff'; ...
                'desk', 'furniture-stuff'; ...
                'table', 'furniture-stuff'; ...
                'shelf', 'furniture-stuff'; ...
                'cabinet', 'furniture-stuff'; ...
                'cupboard', 'furniture-stuff'; ...
                'mirror', 'furniture-stuff'; ...
                'counter', 'furniture-stuff'; ...
                'light', 'furniture-stuff'; ...
                'stairs', 'furniture-stuff'; ...
                'furniture-other', 'furniture-stuff'; ...
                'rug', 'textile'; ...
                'mat', 'textile'; ...
                'towel', 'textile'; ...
                'napkin', 'textile'; ...
                'clothes', 'textile'; ...
                'cloth', 'textile'; ...
                'curtain', 'textile'; ...
                'blanket', 'textile'; ...
                'pillow', 'textile'; ...
                'banner', 'textile'; ...
                'textile-other', 'textile'; ...
                'fruit', 'food-stuff'; ...
                'salad', 'food-stuff'; ...
                'vegetable', 'food-stuff'; ...
                'food-other', 'food-stuff'; ...
                ... % End of level 4 left
                'house', 'building'; ...
                'skyscraper', 'building'; ...
                'bridge', 'building'; ...
                'tent', 'building'; ...
                'roof', 'building'; ...
                'building-other', 'building'; ...
                'fence', 'structural'; ...
                'cage', 'structural'; ...
                'net', 'structural'; ...
                'railing', 'structural'; ...
                'structural-other', 'structural'; ...
                'grass', 'plant'; ...
                'tree', 'plant'; ...
                'bush', 'plant'; ...
                'leaves', 'plant'; ...
                'flower', 'plant'; ...
                'branch', 'plant'; ...
                'moss', 'plant'; ...
                'straw', 'plant'; ...
                'plant-other', 'plant'; ...
                'clouds', 'sky'; ...
                'sky-other', 'sky'; ...
                'wood', 'solid'; ...
                'rock', 'solid'; ...
                'stone', 'solid'; ...
                'mountain', 'solid'; ...
                'hill', 'solid'; ...
                'solid-other', 'solid'; ...
                'sand', 'ground'; ...
                'snow', 'ground'; ...
                'dirt', 'ground'; ...
                'mud', 'ground'; ...
                'gravel', 'ground'; ...
                'road', 'ground'; ...
                'pavement', 'ground'; ...
                'railroad', 'ground'; ...
                'platform', 'ground'; ...
                'playingfield', 'ground'; ...
                'ground-other', 'ground'; ...
                'fog', 'water'; ...
                'river', 'water'; ...
                'sea', 'water'; ...
                'waterdrops', 'water'; ...
                'water-other', 'water'; ...
                };
            
            % Convert to tree
            [nodes, categories, heights] = parentsToTrees(parents);
        end
        
        function[labelNames, labelCount] = getLabelNames(obj)
            % [labelNames, labelCount] = getLabelNames(obj)
            %
            % Get a cell of strings that specify the names of each label.
            
            thingNames = obj.getLabelNamesThings();
            stuffNames = obj.getLabelNamesStuff();
            
            labelNames = ['unlabeled'; thingNames; stuffNames];
            labelCount = numel(labelNames);
        end
        
        function[labelNames, labelCount] = getLabelNamesStuff(obj)
            % [labelNames, labelCount] = getLabelNamesStuff(obj)
            %
            % Get a cell of strings that specify the names of each label.
            
            % Retrieve labels from hierarchy to make sure they match
            [~, categories, heights] = obj.getClassHierarchyStuff();
            
            % Select only leaf nodes
            sel = heights == max(heights);
            categories = categories(sel);
            
            % Get stuff and thing labels
            labelNames = sort(categories);
            labelCount = numel(labelNames);
        end
        
        function[labelNames, labelCount] = getLabelNamesThings(obj)
            % [labelNames, labelCount] = getLabelNamesThings(obj)
            %
            % Get a cell of strings that specify the names of each label.
            
            % Retrieve labels from hierarchy to make sure they match
            [~, categories, heights] = obj.getClassHierarchyThings();
            
            % Select only leaf nodes
            sel = heights == max(heights);
            categories = categories(sel);
            
            % Get stuff and thing labels
            labelNames = categories;
            labelCount = numel(labelNames);
        end
    end
end